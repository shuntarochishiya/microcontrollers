C51 COMPILER V9.53.0.0   MAIN                                                              11/13/2024 18:24:17 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Keil\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main.ls
                    -t) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include<reg51.h>
   2          #include "lcd.h"
   3          
   4          sbit r1 = P1^0;
   5          sbit r2 = P1^1;
   6          sbit r3 = P1^2;
   7          sbit r4 = P1^3;
   8          sbit c1 = P1^4;
   9          sbit c2 = P1^5;
  10          sbit c3 = P1^6;
  11          sbit c4 = P1^7;
  12          void row_scan();
  13          void delay(unsigned char);
  14          void send_num(unsigned int);
  15          void calculate();
  16          unsigned int y, a = 0, b = 0;
  17          unsigned char operator, flag = 0;
  18          unsigned char error = 0;
  19          
  20          void main()
  21          {
  22   1          P1 = 0xf0; // To make rows as output and columns as input pins
  23   1          lcd_init();
  24   1          lcd_cmd(0x85);
  25   1          lcd_string("Tatiana");
  26   1          lcd_cmd(0xc3);
  27   1          lcd_string("Kazakevich");
  28   1          delay(200);
  29   1          lcd_cmd(0x01);
  30   1          while(1)
  31   1          {
  32   2              row_scan();
  33   2          }
  34   1      }
  35          
  36          void row_scan()
  37          {
  38   1          if (error)  
  39   1          {
  40   2              lcd_cmd(0x01);    
  41   2              lcd_string("Invalid Input");  
  42   2              delay(200);
  43   2              error = 0;              
  44   2              lcd_cmd(0x01);       
  45   2              flag = a = b = 0;    
  46   2              return;
  47   2          }
  48   1      
  49   1      
  50   1          //---ROW 1---//
  51   1          r1 = 0;
  52   1          r2 = r3 = r4 = 1;
  53   1          if(c1 == 0)
  54   1          {
C51 COMPILER V9.53.0.0   MAIN                                                              11/13/2024 18:24:17 PAGE 2   

  55   2              delay(32);
  56   2              while(c1 == 0)
  57   2              {
  58   3                  lcd_dat('7');
  59   3                  if(flag == 0)
  60   3                      a = a*10 + 7;
  61   3                  else
  62   3                      b = b*10 + 7;
  63   3              }
  64   2          }
  65   1          if(c2 == 0)
  66   1          {
  67   2              delay(32);
  68   2              while(c2 == 0)
  69   2              {
  70   3                  lcd_dat('8');
  71   3                  if(flag == 0)
  72   3                      a = a*10 + 8;
  73   3                  else
  74   3                      b = b*10 + 8;
  75   3              }
  76   2          }
  77   1          if(c3 == 0)
  78   1          {
  79   2              delay(32);
  80   2              while(c3 == 0)
  81   2              {
  82   3                  lcd_dat('9');
  83   3                  if(flag == 0)
  84   3                      a = a*10 + 9;
  85   3                  else
  86   3                      b = b*10 + 9;
  87   3              }
  88   2          }
  89   1          if(c4 == 0)
  90   1          {
  91   2              delay(32);
  92   2              while(c4 == 0)
  93   2              {
  94   3                  if (flag == 1) 
  95   3                  {
  96   4                      error = 1;
  97   4                      break;
  98   4                  }
  99   3                  flag = 1;
 100   3                  lcd_dat('/');
 101   3                  operator = '/';
 102   3              }
 103   2          }
 104   1      
 105   1          //---ROW 2---//
 106   1          r2 = 0;
 107   1          r1 = r3 = r4 = 1;
 108   1          if(c1 == 0)
 109   1          {
 110   2              delay(32);
 111   2              while(c1 == 0)
 112   2              {
 113   3                  lcd_dat('4');
 114   3                  if(flag == 0)
 115   3                      a = a*10 + 4;
 116   3                  else
C51 COMPILER V9.53.0.0   MAIN                                                              11/13/2024 18:24:17 PAGE 3   

 117   3                      b = b*10 + 4;
 118   3              }
 119   2          }
 120   1          if(c2 == 0)
 121   1          {
 122   2              delay(32);
 123   2              while(c2 == 0)
 124   2              {
 125   3                  lcd_dat('5');
 126   3                  if(flag == 0)
 127   3                      a = a*10 + 5;
 128   3                  else
 129   3                      b = b*10 + 5;
 130   3              }
 131   2          }
 132   1          if(c3 == 0)
 133   1          {
 134   2              delay(32);
 135   2              while(c3 == 0)
 136   2              {
 137   3                  lcd_dat('6');
 138   3                  if(flag == 0)
 139   3                      a = a*10 + 6;
 140   3                  else
 141   3                      b = b*10 + 6;
 142   3              }
 143   2          }
 144   1          if(c4 == 0)
 145   1          {
 146   2              delay(32);
 147   2              while(c4 == 0)
 148   2              {
 149   3                  if (flag == 1)
 150   3                  {
 151   4                      error = 1;
 152   4                      break;
 153   4                  }
 154   3                  flag = 1;
 155   3                  lcd_dat('x');
 156   3                  operator = 'x';
 157   3              }
 158   2          }
 159   1      
 160   1          //---ROW 3---//
 161   1          r3 = 0;
 162   1          r2 = r1 = r4 = 1;
 163   1          if(c1 == 0)
 164   1          {
 165   2              delay(32);
 166   2              while(c1 == 0)
 167   2              {
 168   3                  lcd_dat('1');
 169   3                  if(flag == 0)
 170   3                      a = a*10 + 1;
 171   3                  else
 172   3                      b = b*10 + 1;
 173   3              }
 174   2          }
 175   1          if(c2 == 0)
 176   1          {
 177   2              delay(32);
 178   2              while(c2 == 0)
C51 COMPILER V9.53.0.0   MAIN                                                              11/13/2024 18:24:17 PAGE 4   

 179   2              {
 180   3                  lcd_dat('2');
 181   3                  if(flag == 0)
 182   3                      a = a*10 + 2;
 183   3                  else
 184   3                      b = b*10 + 2;
 185   3              }
 186   2          }
 187   1          if(c3 == 0)
 188   1          {
 189   2              delay(32);
 190   2              while(c3 == 0)
 191   2              {
 192   3                  lcd_dat('3');
 193   3                  if(flag == 0)
 194   3                      a = a*10 + 3;
 195   3                  else
 196   3                      b = b*10 + 3;
 197   3              }
 198   2          }
 199   1           if(c4 == 0)
 200   1          {
 201   2              delay(32);
 202   2              while(c4 == 0)
 203   2              {
 204   3                  if (flag == 1)
 205   3                  {
 206   4                      error = 1;
 207   4                      break;
 208   4                  }
 209   3                  flag = 1;
 210   3                  lcd_dat('-');
 211   3                  operator = '-';
 212   3              }
 213   2          }
 214   1      
 215   1          //---ROW 4---//
 216   1          r4 = 0;
 217   1          r2 = r3 = r1 = 1;
 218   1          if(c1 == 0)
 219   1          {
 220   2              delay(32);
 221   2              while(c1 == 0)
 222   2              {
 223   3                  lcd_cmd(0x01);
 224   3                  flag = a = b = 0;
 225   3              }
 226   2          }
 227   1          if(c2 == 0)
 228   1          {
 229   2              delay(32);
 230   2              while(c2 == 0)
 231   2              {
 232   3                  lcd_dat('0');
 233   3                  if(flag == 0)
 234   3                      a = a*10 + 0;
 235   3                  else
 236   3                      b = b*10 + 0;
 237   3              }
 238   2          }
 239   1          if(c3 == 0)
 240   1          {
C51 COMPILER V9.53.0.0   MAIN                                                              11/13/2024 18:24:17 PAGE 5   

 241   2              delay(32);
 242   2              while(c3 == 0)
 243   2              {
 244   3                  lcd_dat('=');
 245   3                  calculate();
 246   3              }
 247   2          }
 248   1          if(c4 == 0)
 249   1          {
 250   2              delay(32);
 251   2              while(c4 == 0)
 252   2              {
 253   3                  if (flag == 1)
 254   3                  {
 255   4                      error = 1;
 256   4                      break;
 257   4                  }
 258   3                  flag = 1;
 259   3                  lcd_dat('+');
 260   3                  operator = '+';
 261   3              }
 262   2          }
 263   1      }
 264          
 265          void delay(unsigned char t)
 266          {
 267   1          unsigned int j;
 268   1          unsigned char i;
 269   1          for(i = 0; i < t; i++)
 270   1              for(j = 0; j < 700; j++);
 271   1      }
 272          
 273          
 274          void calculate()
 275          {
 276   1          lcd_cmd(0xc0);
 277   1          if(operator == '+')
 278   1          {
 279   2              send_num(a + b);
 280   2          }
 281   1          else if(operator == '-')
 282   1          {
 283   2              if(a > b)
 284   2                  send_num(a - b);
 285   2              else
 286   2              {
 287   3                  lcd_dat('-');
 288   3                  send_num(b - a);
 289   3              }
 290   2          }
 291   1          else if (operator == '/')
 292   1          {
 293   2              if (b != 0)
 294   2              {
 295   3                  unsigned int integer_part = a / b;
 296   3                  unsigned int remainder = a % b;
 297   3                  unsigned int decimal_part1 = (remainder * 10) / b; 
 298   3                  unsigned int remainder2 = (remainder * 10) % b;
 299   3                  unsigned int decimal_part2 = (remainder2 * 10) / b; 
 300   3      
 301   3                  send_num(integer_part); 
 302   3                  lcd_dat('.'); 
C51 COMPILER V9.53.0.0   MAIN                                                              11/13/2024 18:24:17 PAGE 6   

 303   3                  send_num(decimal_part1); 
 304   3                  send_num(decimal_part2); 
 305   3              }
 306   2              else
 307   2              {
 308   3                  lcd_cmd(0x01);
 309   3                  lcd_string("Error: div by 0");
 310   3              }
 311   2          }
 312   1          else if(operator == 'x')
 313   1          {
 314   2              send_num(a * b);
 315   2          }
 316   1          
 317   1          delay(699);
 318   1          flag = 0;
 319   1          a = b = 0;
 320   1          operator = 0;
 321   1          lcd_cmd(0x01);
 322   1      }
 323          
 324          
 325          void send_num(unsigned int x)
 326          {
 327   1          if(x > 9999)
 328   1          {
 329   2              y = x/10000;
 330   2              lcd_dat(y + 0x30);
 331   2              x = x%10000;
 332   2              y = x/1000;
 333   2              lcd_dat(y + 0x30);
 334   2              x = x%1000;
 335   2              y = x/100;
 336   2              lcd_dat(y + 0x30);
 337   2              x = x%100;
 338   2              y = x/10;
 339   2              lcd_dat(y + 0x30);
 340   2              y = x%10;
 341   2              lcd_dat(y + 0x30);
 342   2          }
 343   1          else if(x > 999 && x < 9999)
 344   1          {
 345   2              y = x/1000;
 346   2              lcd_dat(y + 0x30);
 347   2              x = x%1000;
 348   2              y = x/100;
 349   2              lcd_dat(y + 0x30);
 350   2              x = x%100;
 351   2              y = x/10;
 352   2              lcd_dat(y + 0x30);
 353   2              y = x%10;
 354   2              lcd_dat(y + 0x30);
 355   2          }
 356   1          else if(x > 99 && x < 999)
 357   1          {
 358   2              y = x/100;
 359   2              lcd_dat(y + 0x30);
 360   2              x = x%100;
 361   2              y = x/10;
 362   2              lcd_dat(y + 0x30);
 363   2              y = x%10;
 364   2              lcd_dat(y + 0x30);
C51 COMPILER V9.53.0.0   MAIN                                                              11/13/2024 18:24:17 PAGE 7   

 365   2          }
 366   1          else if(x > 9 && x < 99)
 367   1          {
 368   2              y = x/10;
 369   2              lcd_dat(y + 0x30);
 370   2              y = x%10;
 371   2              lcd_dat(y + 0x30);
 372   2          }
 373   1          else
 374   1          {
 375   2              lcd_dat(x + 0x30);
 376   2          }
 377   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1536    ----
   CONSTANT SIZE    =     49    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      9      15
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
